swagger: "2.0"
info:
  title: Bisnode Company Search
  description: >-
    Common components for Company Search REST APIs
  version: '1.0.0'
    
  ####################
  # Common data models
  ####################
schemes:
  - https
definitions:
    SearchResponse:
      type: object
      description: Searchmodel. The order in the list will always be best matches first. TODO - Add some  basic rules for the searches so the client understands the order in the result list..
      properties:
        hitCount:
          type: integer
          format: int32
          description: The number of hits this search gave.
        offset:
          type: integer
          format: int32
          description: Offset value sent in request or the default value if none was given. Do we have a maxy value for this? I.e we don't support fetching lists larger than 10 000 ?
          minimum: 0
          default: 0
        limit: 
          type: integer
          format: int32
          description: Limit value sent in request or the default value if none was given.
          minimum: 0
          default: 20
          maximum: 100
        companies:
          type: array
          description: List of companies
          items:
            "$ref": "#/definitions/Company"
        _links:
          "$ref": '#/definitions/Links'
      required:
      - hitCount
      - companies
      title: SearchResponse
    Company:
      type: object
      properties:
        name:
          type: string
          description: The name of the company
        country:
          type: string
          description: 'Country code as described in: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2'
          example: 'SE'
        registrationNumber:
          type: string
          description: The national registrationNumber for this company.
          example: '5564855582'
        dunsNumber:
          type: string
          description: dunsnumber. 
        address:
          "$ref": "#/definitions/Address"
      title: Company
    Address:
      type: object
      description: This is the visiting address of the company
      properties:
        street:
          type: string
          description: Streetname
        town:
          type: string
          description: Postal town
        postalCode:
          type: string
          description: postalCode
      title: Address
    Link:
      type: object
      properties:
        href: 
          type: string
          description: A valid URI
          example: 'https://api.bisnode.com/company-search/v1/companies?param1=xxxx'
      title: Link
    Links:
      type: object
      description: >-
            Links for easy pagination. 
      example: >-
        '{
          "next": {
            "href": "https://api.bisnode.com/company-search/v1/companies?token=okjoqedqasd"
          },
          "prev": {
            "href": "https://api.bisnode.com/company-search/v1/companies?token=sof2nkn2adz"
          },
          "self": {
            "href": "https://api.bisnode.com/company-search/v1/companies?token=xcxxcx"
          }
        }'
      properties:
        next:
          "$ref": '#/definitions/Link'
        prev:
          "$ref": '#/definitions/Link'
        self:
          "$ref": '#/definitions/Link'
    SearchRequest:
      type: object
      description: Search input. TODO - is wildcards supported?
      properties:
        offset:
          type: integer
          format: int32
          description: A positive number telling how many hits should be skipped. A value of 2 will skip the first 2 results that matched the search criteria.
          minimum: 0
          default: 0
        limit: 
          type: integer
          format: int32
          description: The number of hits per call, a value of 0 means only hitcount is returned.
          minimum: 0
          default: 20
          maximum: 100
        name:
          type: string
          description: The name of the company
          example: 'Bisnode AB'
        registrationNumber:
          type: string
          description: The national registrationNumber for this company.
          example: '5564855582'
        includeInactive:
          type: boolean
          description: 'Set to true to include inactive companies'
          default: false
        includeBranches:
          type: boolean
          description: 'Set to true to include branches in the results'
          default: false
        country:
          type: string
          description: The country to search in
          enum: ['SE', 'NO', 'FI', 'DK']
        address:
          "$ref": "#/definitions/Address"